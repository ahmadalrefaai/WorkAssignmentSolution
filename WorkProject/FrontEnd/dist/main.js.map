{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';  \nimport {ServiceService} from './service.service';  \nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { ViewChild } from '@angular/core';\n@Component({  \n  selector: 'app-root',  \n  templateUrl: './app.component.html',  \n  styleUrls: ['./app.component.css']  \n})  \nexport class AppComponent {  \n  title = 'EmployeeFE';  \n     \n  constructor(private ServiceService: ServiceService) { }  \n  data: any;  \n  EmpForm: FormGroup;  \n  submitted = false;   \n  EventValue: any = \"Save\";  \n  dataSource = new MatTableDataSource<any>();\n  displayedColumns: string[] = [\n    \"eId\",\n    \"eName\",\n    \"eAddress\",\n    \"eAge\",\n    \"editAction\",\n    \"deleteAction\"\n  ];\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  ngOnInit(): void {  \n    this.getdata();  \n\n    this.EmpForm = new FormGroup({  \n      eId: new FormControl(null),  \n      eName: new FormControl(\"\",[Validators.required]),        \n      eAddress: new FormControl(\"\",[Validators.required]),  \n      eEmail:new FormControl(\"\",[Validators.required]),  \n      eAge: new FormControl(\"\",[Validators.required]),  \n    })    \n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  getdata() {  \n    this.ServiceService.getData().subscribe((data: any[]) => {  \n      this.data = data;\n      this.dataSource.data = data\n    })  \n  }  \n  deleteData(element) {  \n    this.ServiceService.deleteData(element.eId).subscribe((data: any[]) => {  \n      this.data = data;  \n      this.getdata();  \n    })  \n  }  \n  Save() {   \n    this.submitted = true;  \n    \n     if (this.EmpForm.invalid) {  \n            return;  \n     }  \n    this.ServiceService.postData(this.EmpForm.value).subscribe((data: any[]) => {  \n      this.data = data;  \n      this.resetFrom();  \n  \n    })  \n  }  \n  Update() {   \n    this.submitted = true;  \n    \n    if (this.EmpForm.invalid) {  \n     return;  \n    }        \n    this.ServiceService.putData(this.EmpForm.value.eId, this.EmpForm.value).subscribe((data: any[]) => {  \n      this.data = data;  \n      this.resetFrom();  \n    })  \n  }  \n  \n  EditData(element) {  \n    this.EmpForm.controls[\"eId\"].setValue(element.eId);  \n    this.EmpForm.controls[\"eName\"].setValue(element.eName);      \n    this.EmpForm.controls[\"eAddress\"].setValue(element.eAddress);  \n    this.EmpForm.controls[\"eEmail\"].setValue(element.eEmail);  \n    this.EmpForm.controls[\"eAge\"].setValue(element.eAge);  \n    this.EventValue = \"Update\";  \n  }  \n  \n  resetFrom()  \n  {     \n    this.getdata();  \n    this.EmpForm.reset();  \n    this.EventValue = \"Save\";  \n    this.submitted = false;   \n  }  \n} ","\n    <div class=\"container\">  \n        \n      <form [formGroup]=\"EmpForm\" (ngSubmit)=\"this[EventValue]()\">  \n          \n          <h3>Employee Table CRUD Operation</h3>  \n          <div class=\"row\">  \n               \n          <table class=\"table\">  \n          <tr>  \n            <td>Name</td>  \n            <td>  \n              <input type=\"hidden\" formControlName=\"eId\">  \n              <input type=\"text\" formControlName=\"eName\">  \n              <div *ngIf=\"submitted && EmpForm.controls.eName.errors\" class=\"text-danger\">  \n                <div *ngIf=\"EmpForm.controls.eName.errors.required\"> Name is a required field</div>  \n              </div>   \n            </td>  \n          </tr>  \n            \n          <tr>  \n            <td>Address</td>  \n            <td><input type=\"text\" formControlName=\"eAddress\">  \n              <div *ngIf=\"submitted && EmpForm.controls.eAddress.errors\" class=\"text-danger\">  \n                <div *ngIf=\"EmpForm.controls.eAddress.errors.required\"> Address is a required field</div>  \n              </div>   \n            </td>  \n          </tr>  \n          <tr>  \n            <td>Email</td>  \n            <td>  \n              <input type=\"text\" formControlName=\"eEmail\">  \n              <div *ngIf=\"submitted && EmpForm.controls.eEmail.errors\" class=\"text-danger\">  \n                <div *ngIf=\"EmpForm.controls.eEmail.errors.required\">Email is a required field</div>  \n              </div>  \n            </td>  \n          </tr>  \n          <tr>  \n            <td>Age</td>  \n            <td>  \n              <input type=\"number\" formControlName=\"eAge\">  \n              <div *ngIf=\"submitted && EmpForm.controls.eAge.errors\" class=\"text-danger\">  \n                <div *ngIf=\"EmpForm.controls.eAge.errors.required\">Age is required</div>  \n              </div>  \n                \n            </td>  \n          </tr>  \n          <tr>  \n        \n            <td colspan=\"2\">  \n              <button type=\"submit\" class=\"btn btn-primary\">{{EventValue}}</button>  \n            </td>  \n          </tr>  \n            \n        </table>  \n        </div>  \n           \n          <div class=\"row\">\r\n\r\n\r\n              <mat-form-field>\r\n                  <mat-label>Filter</mat-label>\r\n                  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n              </mat-form-field>\r\n\r\n              <div class=\"mat-elevation-z8\">\r\n                  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                      <!-- ID Column -->\r\n                      <ng-container matColumnDef=\"eId\">\r\n                          <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\r\n                          <mat-cell *matCellDef=\"let element\"> {{element.eId}} </mat-cell>\r\n                      </ng-container>\r\n\r\n                      <!-- Progress Column -->\r\n                      <ng-container matColumnDef=\"eName\">\r\n                          <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n                          <mat-cell *matCellDef=\"let element\"> {{element.eName}}% </mat-cell>\r\n                      </ng-container>\r\n\r\n                      <!-- Name Column -->\r\n                      <ng-container matColumnDef=\"eAddress\">\r\n                          <mat-header-cell *matHeaderCellDef mat-sort-header> Address </mat-header-cell>\r\n                          <mat-cell *matCellDef=\"let element\"> {{element.eAddress}} </mat-cell>\r\n                      </ng-container>\r\n\r\n                      <!-- Color Column -->\r\n                      <ng-container matColumnDef=\"eAge\">\r\n                          <mat-header-cell *matHeaderCellDef mat-sort-header> Age </mat-header-cell>\r\n                          <mat-cell *matCellDef=\"let element\"> {{element.eAge}} </mat-cell>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"editAction\">\r\n                          <mat-header-cell *matHeaderCellDef> editAction </mat-header-cell>\r\n                          <mat-cell *matCellDef=\"let element\"><i class=\"material-icons\" (click)=\"EditData(element)\">Edit</i>  </mat-cell>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"deleteAction\">\r\n                          <mat-header-cell *matHeaderCellDef> deleteAction </mat-header-cell>\r\n                          <mat-cell *matCellDef=\"let element\"><i class=\"material-icons\" (click)=\"deleteData(element)\">Delete</i>  </mat-cell>\r\n                      </ng-container>\r\n\r\n                      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n                      <!-- Row shown when there is no matching data. -->\r\n                  \r\n                  </table>\r\n\r\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n              </div>\r\n\r\n\r\n          </div>  \n      </form>  \n        \n      </div>  \n  ","\n    import { BrowserModule } from '@angular/platform-browser';  \n    import { NgModule } from '@angular/core';  \n      \n    import { AppComponent } from './app.component';  \n    import { FormsModule, ReactiveFormsModule } from '@angular/forms';  \n    import { HttpClientModule }    from '@angular/common/http';  \n   import { ServiceService } from './service.service';\n   import { MatTableModule } from '@angular/material/table';\n   import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n   import { MatPaginator } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { MatPaginatorModule } from '@angular/material/paginator'; \n    @NgModule({  \n      declarations: [  \n        AppComponent  \n      ],  \n      imports: [  \n        BrowserModule,  \n        FormsModule,  \n        ReactiveFormsModule,  \n        HttpClientModule,\n        MatTableModule,\n        BrowserAnimationsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatPaginatorModule,\n\n\n      \n      ],  \n      providers: [ServiceService], \n      bootstrap: [AppComponent]  \n    })  \n    export class AppModule { }  \n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders }    from '@angular/common/http';  \n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  constructor(private http: HttpClient) { }\n    httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }\n\n    getData(){\n      return this.http.get('/api/Employee');\n    }\n\n    postData(formData)\n    {\n      return this.http.post('/api/Employee', formData)\n    }\n    putData(id,formData){\n      return this.http.put('/api/Employee/'+id,formData);\n    }\n    deleteData(id)\n    {\n      return this.http.delete('/api/Employee/'+id);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}